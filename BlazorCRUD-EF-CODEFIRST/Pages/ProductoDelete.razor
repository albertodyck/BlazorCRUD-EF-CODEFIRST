@page "/ProductoDelete/{productoId:int}"
@inject IProductoService  ProductoService
@inject ICotizacionService CotizacionService

@inject NavigationManager NavigationManager

@attribute [Authorize]


<h1 class="text-primary">Borrado de Producto</h1>
<p class="alert alert-danger" role="alert" text-align:center">Esta seguro que desea eleminar esta producto?</p>

<EditForm Model="@producto">
    <table class="table">
        <tr>
            <td>Descripción:</td>
            <td><input class="form-control col-sm-4" type="text" @bind="producto.Descripcion" /></td>
        </tr>
        <tr>
            <td>En la cotizacion numero:</td>
            <td><input class="form-control col-sm-4" type="text" @bind="producto.CotizacionId" /></td>
        </tr>
        <tr>
            <td colspan="2" style="text-align:center">
                <input type="submit" value="Borrar" class="btn btn-danger" @onclick="DeleteProducto" />
                <input type="button" value="Cancel" class="btn btn-info" @onclick="Cancel" />
            </td>
        </tr>
    </table>
</EditForm>


@code {

    [Parameter]
    public int productoId { get; set; }

    [Parameter]
    public int cotizacionId { get; set; }

    private Producto producto = new Producto();

    private Cotizacion cotizacion = new Cotizacion();

    decimal IVAeliminado;

    protected override async Task OnInitializedAsync()
    {
        producto = await ProductoService.GetProductoDetails(productoId);

        cotizacionId = producto.CotizacionId;

        cotizacion = await CotizacionService.GetCotizacionDetails(cotizacionId);
    }

    protected async Task CalcularTotal()
    {
        cotizacion.SubTotal = cotizacion.SubTotal - producto.TotalFila;

        //IVAeliminado = producto.TotalFila * 16 / 100;
        //cotizacion.IVA = cotizacion.IVA - IVAeliminado;
        cotizacion.IVA = cotizacion.SubTotal * 16 / 100;

        cotizacion.Total = cotizacion.SubTotal + cotizacion.IVA;

        await CotizacionService.SaveCotizacion(cotizacion);
    }

    protected async Task DeleteProducto()
    {
        await ProductoService.DeleteProducto(productoId);
        await CalcularTotal();
        NavigationManager.NavigateTo("/");
    }

    protected void Cancel()
    {
        NavigationManager.NavigateTo("/");
    }
}



