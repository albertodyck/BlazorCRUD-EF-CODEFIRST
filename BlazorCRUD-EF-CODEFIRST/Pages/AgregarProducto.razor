@page "/AgregarProducto"

@page "/AgregarProducto/{CotizacionId:int}"

@attribute [Authorize]


@inject IProductoService ProductoService
@inject ICotizacionService CotizacionService

@inject NavigationManager NavigationManager


<h1 class="text-primary">Agregar Producto</h1>

<EditForm Model="@producto">
    <table class="table">
        <tr>
            <td>Cantidad</td>
            <td><input class="form-control col-sm-4" type="number" @bind="producto.Cantidad" /></td>
        </tr>
        <tr>
            <td>Descripción</td>
            <td><input class="form-control col-sm-4" type="text" @bind="producto.Descripcion" /></td>
        </tr>
        <tr>
            <td>SKU</td>
            <td><input class="form-control col-sm-4" type="number" @bind="producto.SKU" /></td>
        </tr>
        <tr>
            <td>Precio Unitario</td>
            <td><input class="form-control col-sm-4" type="number" @bind="producto.PrecioUnitario" /></td>
        </tr>
        <tr>
            <td colspan="2" style="text-align:center">
                <input type="submit" value="Save" class="btn btn-outline-success" @onclick="SaveProducto" />
                <input type="button" value="Cancel" class="btn btn-info" @onclick="Cancel" />
            </td>
        </tr>
    </table>
</EditForm>



@code {

    private Producto producto = new Producto();

    private Cotizacion cotizacion = new Cotizacion();

    public string Message { get; set; }

    [Parameter]
    public decimal subtotal { get; set; }

    [Parameter]
    public int productoId { get; set; }


    [Parameter]
    public int cotizacionId { get; set; }


    protected void CalcularTotalFila()
    {
        producto.TotalFila = producto.Cantidad * producto.PrecioUnitario;
        //subtotal = Convert.ToDecimal(producto.Cantidad) * Convert.ToDecimal(producto.PrecioUnitario);
        //producto.TotalFila = subtotal;
    }

    protected async Task CalcularTotal()
    {
        cotizacion = await CotizacionService.GetCotizacionDetails(cotizacionId);
        cotizacion.SubTotal = producto.TotalFila + cotizacion.SubTotal;
        cotizacion.IVA = cotizacion.SubTotal * 16 / 100;
        cotizacion.Total = cotizacion.SubTotal + cotizacion.IVA;

        await CotizacionService.SaveCotizacion(cotizacion);
    }

    protected async Task SaveProducto()
    {
        CalcularTotalFila();
        producto.CotizacionId = cotizacionId;
        await ProductoService.SaveProducto(producto);
        await CalcularTotal();
        NavigationManager.NavigateTo("/DetallesCotizacion/" + cotizacionId);
    }

    protected void Cancel()
    {
        NavigationManager.NavigateTo("/DetallesCotizacion/" + cotizacionId);
    }

}





